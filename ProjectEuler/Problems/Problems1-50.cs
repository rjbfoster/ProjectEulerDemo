using System.Diagnostics;

namespace ProjectEuler.Problems;

internal partial class Problem
{
    private static void Problem_1()
    {
        Write("Problem:", "If we list all the natural numbers below 10 that are multiples of 3 or 5, " +
            "we get 3, 5, 6 and 9. The sum of these multiples is 23. Find the sum of all the multiples " +
            "of 3 or 5 below 1000.");

        var timer = Stopwatch.StartNew();

        int x = 0;
        for (int i = 0; i < 1000; i++)
        {
            if (i % 3 == 0 || i % 5 == 0)
            {
                x += i;
            }
        }
        timer.Stop();
        Write("Solution:", x.ToString() + $" (Solved in {timer.ElapsedMilliseconds} ms)");
    }

    private static void Problem_2()
    {
        Write("Problem:","Each new term in the Fibonacci sequence is generated by adding the previous two terms. " +
            "By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... " +
            "By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the " +
            "sum of the even-valued terms.");

        var timer = Stopwatch.StartNew();

        int x = 0;
        int y;
        int i = 1;
        int j = 1;
        while (i < 4000000)
        {
            if (i % 2 == 0)
            {
                x += i;
            }
            y = i;
            i += j;
            j = y;
        }
        timer.Stop();
        Write("Solution:", x.ToString() + $" (Solved in {timer.ElapsedMilliseconds} ms)");
    }

    private static void Problem_3()
    {
        Write("Problem:", "The prime factors of 13195 are 5, 7, 13 and 29. What is the largest prime factor of " +
                          "the number 600851475143?");

        var timer = Stopwatch.StartNew();

        long x = 0;
        long y = 600851475143;

        // This method is designed to work for any given value of 'y'. The below if expression is always false for
        //  provided value.
        if (y % 2 == 0)
        {
            x = 2;
            while (y % 2 == 0)
            {
                y /= 2;
            }
        }

        for (long i = 3; i <= Math.Sqrt(y); i += 2)
        {
            while (y % i == 0)
            {
                x = i;
                y /= i;
            }
        }

        if (y > 2)
        {
            x = y;
        }
        timer.Stop();
        Write("Solution:", x.ToString() + $" (Solved in {timer.ElapsedMilliseconds} ms)");
    }
}